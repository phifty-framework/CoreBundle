// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  if (typeof window.FiveKit === "undefined") {
    window.FiveKit = {};
  }


  /*
   * FileUploader uploads multiple files
   */

  FiveKit.BatchFileUploader = (function(superClass) {
    extend(BatchFileUploader, superClass);

    function BatchFileUploader() {
      return BatchFileUploader.__super__.constructor.apply(this, arguments);
    }

    BatchFileUploader.prototype.upload = function(files) {
      return ActionCsrfToken.get({
        success: (function(_this) {
          return function(csrfToken) {
            var file, fn, i, len, rs;
            rs = [];
            fn = function(file) {
              return rs.push(_this.uploadFile(csrfToken, file));
            };
            for (i = 0, len = files.length; i < len; i++) {
              file = files[i];
              fn(file);
            }
            if (_this.config.onTransferFinished) {
              return $.when.apply($, rs).done(_this.config.onTransferFinished);
            }
          };
        })(this)
      });
    };

    return BatchFileUploader;

  })(FiveKit.FileUploader);

}).call(this);
